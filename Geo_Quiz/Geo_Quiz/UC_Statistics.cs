using System;
using System.Drawing;
using System.IO;
using System.Linq;
using System.Text;
using System.Windows.Forms;

namespace Geo_Quiz
{
    public partial class UC_Statistics : UserControl
    {
        readonly GameSpecs gameInfo = new GameSpecs();
        readonly string gameMode;

        readonly TimeSpan totalTime = new TimeSpan();

        public int finalScore;
        public int averageScore;

        public string filepath = Path.Combine(Directory.GetCurrentDirectory(), "..\\..\\", "Data");

        public UC_Statistics(int score, TimeSpan ts, GameSpecs gamespecs, string mode)
        {
            gameInfo = gamespecs;
            totalTime = ts;
            finalScore = score;
            gameMode = mode;

            InitializeComponent();

            SetResults();

            AddRows();
        }

        private void AddRows()
        {
            string statsMode;

            if (gameMode == "Text")
            {
                statsMode = "StatsTextInput.txt";
            }
            else
            {
                statsMode = "Stats4Variants.txt";
            }

            string path = Path.Combine(filepath, statsMode);
            string[] statsRows = File.ReadAllLines(path);

            string[] tempRowArray = new string[dataGridView1.ColumnCount];

            for (int i = 0; i < statsRows.Length; i++)
            {
                for (int j = 0; j < tempRowArray.Length; j++)
                {
                    tempRowArray[j] = statsRows[i].Split('\t')[j];
                }
                
                dataGridView1.Rows.Add(tempRowArray);
            }
        
            dataGridView1.Refresh();
        }

        private void SetResults()
        {
            L_Score.Text += finalScore + " pts.";

            averageScore = finalScore / gameInfo.QuestionCount;
            L_AvgScore.Text += averageScore + " pts.";

            L_TimeSpent.Text += totalTime.Minutes + "mins, " + totalTime.Seconds + "s, " + totalTime.Milliseconds + "ms.";
        }

        private void B_SaveStats_Click(object sender, EventArgs e)
        {
            string acc = SetAccount();
            int fScore = finalScore;
            int avgScore = averageScore;
                //copied from https://stackoverflow.com/questions/2058637/custom-format-timespan-with-string-format
            string tTime = string.Format("{0:00}hrs., {1:00}min., {2:00}s.", Math.Truncate(totalTime.TotalHours), totalTime.Minutes, totalTime.Seconds);
                //end
            int qCount = gameInfo.QuestionCount;
            string cat = UC_GameUI.categories[gameInfo.Category];
            string cont = SetContinents();

            string scoreText;
            scoreText = string.Join("\t", acc, fScore, avgScore, tTime, qCount, cat, cont);

            if (gameMode == "ABCD")
            {
                string abcdPath = Path.Combine(filepath, "Stats4Variants.txt");
                File.AppendAllText(abcdPath, scoreText + '\n');
            }
            else
            {
                string textPath = Path.Combine(filepath, "StatsTextInput.txt");
                File.AppendAllText(textPath, scoreText + '\n');
            }

            B_SaveStats.Enabled = false;
        }

        private string SetAccount()
        {   
            if (F_SignIn.loggedIn == true)
            {
                return F_SignIn.loggedInAccount;
            }
            else
            {
                return "Guest";
            }
        }

        private string SetContinents()
        {
            if (gameInfo.Continents.Length > 1)
            {
                return gameInfo.Continents.Length.ToString();
            }
            else
            {
                return gameInfo.Continents[0];
            }
        }

        private void B_ReturnToMenu_Click(object sender, EventArgs e)
        {
            CloseAllUserControls(this.Parent.Parent.Parent);
        }

            //generated by an AI (ChatGPT)
        private void CloseAllUserControls(Control control)
        {
            foreach (Control childControl in control.Controls)
            {
                if (childControl is UserControl userControl)
                {
                    CloseAllUserControls(userControl);
                    userControl.Dispose();
                }
            }
        }
            //end
    }
}